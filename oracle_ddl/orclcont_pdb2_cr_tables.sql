-- Enable saving commands and outputs into a file
SPOOL /home/oracle/dsm_assign7/logs/orclcont_pdb2_cr_objects.lst append;
SET echo on;
SET serveroutput on;

-- Script to create tables and sequences orclcont_pdb2_cr_tables.sql
-- Modified by Luiza Nascimento
-- This is script must be run by the user that will own these tables. This user must have CREATE TABLE and CREATE SEQUENCE permission

--Create wf_currencies table
CREATE TABLE  WF_CURRENCIES 
   ("CURRENCY_CODE" VARCHAR2(7), 
	"CURRENCY_NAME" VARCHAR2(40) CONSTRAINT "WF_CURR_NN" NOT NULL ENABLE, 
	"COMMENTS" VARCHAR2(150), 
	CONSTRAINT "WF_CURR_PK" PRIMARY KEY ("CURRENCY_CODE")
	USING INDEX  ENABLE
   ) TABLESPACE EDW_OTHER_DATA01
   STORAGE (INITIAL 1M)
;

-- Create wf_languages table
CREATE TABLE  WF_LANGUAGES
   ("LANGUAGE_ID" NUMBER(4,0), 
	"LANGUAGE_NAME" VARCHAR2(50) CONSTRAINT "WF_LANG_LANGNAME_NN" NOT NULL ENABLE, 
	CONSTRAINT "WF_LANG_PK" PRIMARY KEY ("LANGUAGE_ID")
	USING INDEX  ENABLE
   ) TABLESPACE EDW_OTHER_DATA01
   STORAGE (INITIAL 1M)
;

--Create wf_world_regions table
CREATE TABLE  WF_WORLD_REGIONS
   ("REGION_ID" NUMBER(3,0), 
	"REGION_NAME" VARCHAR2(35) CONSTRAINT "WF_REG_REGNAME_NN" NOT NULL ENABLE, 
	CONSTRAINT "WF_REG_PK" PRIMARY KEY ("REGION_ID")
	USING INDEX  ENABLE
   ) TABLESPACE EDW_OTHER_DATA01
   STORAGE (INITIAL 1M)
;

-- Create wf_countries table
--This table was selected to be partitioned by list based on the column region_id
--I decided to partition this table to group the countries by region, since the pattern of search for countries are separated by continents (my assumption)
--I added the constraint not null to the column area, because this field is important for population density calculations. Thie value cannot be zero, so I would add a default value of 1.
CREATE TABLE  WF_COUNTRIES
   ("COUNTRY_ID" NUMBER(4,0), 
	"REGION_ID" NUMBER(3,0) NOT NULL ENABLE, 
	"COUNTRY_NAME" VARCHAR2(70) CONSTRAINT "WF_CNAME_NN" NOT NULL ENABLE, 
	"COUNTRY_TRANSLATED_NAME" VARCHAR2(40), 
	"LOCATION" VARCHAR2(90), 
	"CAPITOL" VARCHAR2(50), 
	"AREA" NUMBER(15,0) NOT NULL, 
	"COASTLINE" NUMBER(8,0), 
	"LOWEST_ELEVATION" NUMBER(6,0), 
	"LOWEST_ELEV_NAME" VARCHAR2(70), 
	"HIGHEST_ELEVATION" NUMBER(6,0), 
	"HIGHEST_ELEV_NAME" VARCHAR2(50), 
	"DATE_OF_INDEPENDENCE" VARCHAR2(30), 
	"NATIONAL_HOLIDAY_NAME" VARCHAR2(200), 
	"NATIONAL_HOLIDAY_DATE" VARCHAR2(30), 
	"POPULATION" NUMBER(12,0), 
	"POPULATION_GROWTH_RATE" VARCHAR2(10), 
	"LIFE_EXPECT_AT_BIRTH" NUMBER(6,2), 
	"MEDIAN_AGE" NUMBER(6,2), 
	"AIRPORTS" NUMBER(6,0), 
	"CLIMATE" VARCHAR2(1000), 
	"FIPS_ID" CHAR(2), 
	"INTERNET_EXTENSION" VARCHAR2(3), 
	"FLAG" BLOB, 
	"CURRENCY_CODE" VARCHAR2(7) NOT NULL ENABLE, 
	CONSTRAINT "WF_CRTY_PK" PRIMARY KEY ("COUNTRY_ID")
	USING INDEX  ENABLE
   ) --TABLESPACE EDW_OTHER_DATA01
   STORAGE (INITIAL 1M)
   PARTITION BY LIST(region_id)(
	PARTITION countries_americas VALUES (5, 13, 21, 29),
	PARTITION countries_africa VALUES (11, 14, 15, 17, 18),
	PARTITION countries_asia_oceania VALUES (9,30,34,35,143,145),
	PARTITION countries_europe VALUES (39,151,154,155),
	PARTITION countries_others VALUES (DEFAULT))
;

-- Adding default value for area
ALTER TABLE WF_COUNTRIES
 MODIFY ("AREA" NUMBER(15,0) DEFAULT 1);
-- Add FK constraints
ALTER TABLE  WF_COUNTRIES ADD CONSTRAINT "WF_REGION_ID_FK1" FOREIGN KEY ("REGION_ID")
	REFERENCES  WF_WORLD_REGIONS ("REGION_ID") ENABLE;
	
ALTER TABLE  WF_COUNTRIES ADD CONSTRAINT "WF_CURR_ID_FK2" FOREIGN KEY ("CURRENCY_CODE")
	REFERENCES  WF_CURRENCIES ("CURRENCY_CODE") ENABLE;

-- Create wf_spoken_languages table
CREATE TABLE  WF_SPOKEN_LANGUAGES
   ("COUNTRY_ID" NUMBER(4,0), 
	"LANGUAGE_ID" NUMBER(4,0), 
	"OFFICIAL" VARCHAR2(2), 
	"COMMENTS" VARCHAR2(512), 
	CONSTRAINT "WF_SPOKEN_LANG_PK" PRIMARY KEY ("COUNTRY_ID", "LANGUAGE_ID")
	USING INDEX  ENABLE
   ) TABLESPACE EDW_OTHER_DATA01
   STORAGE (INITIAL 1M)
;
-- Add FK constraints
ALTER TABLE  WF_SPOKEN_LANGUAGES ADD CONSTRAINT "WF_CTRY_NUM_FK1" FOREIGN KEY ("COUNTRY_ID")
	REFERENCES  WF_COUNTRIES ("COUNTRY_ID") ENABLE;

ALTER TABLE  WF_SPOKEN_LANGUAGES ADD CONSTRAINT "WF_LANG_ID_FK" FOREIGN KEY ("LANGUAGE_ID")
	REFERENCES  WF_LANGUAGES ("LANGUAGE_ID") ENABLE;
	
CREATE TABLE  "F_CUSTOMERS"
   ("ID" NUMBER(5,0),
    "FIRST_NAME" VARCHAR2(25) CONSTRAINT "F_CSR_FIRST_NAME_NN" NOT NULL ENABLE,
    "LAST_NAME" VARCHAR2(35) CONSTRAINT "F_CSR_LAST_NAME_NN" NOT NULL ENABLE,
    "ADDRESS" VARCHAR2(50) CONSTRAINT "F_CSRS_ADDRESS_NN" NOT NULL ENABLE,
    "CITY" VARCHAR2(30) CONSTRAINT "F_CSR_CITY_NN" NOT NULL ENABLE,
    "STATE" VARCHAR2(20) CONSTRAINT "F_CSR_STATE_NN" NOT NULL ENABLE,
    "ZIP" NUMBER(10,0) CONSTRAINT "F_CSR_ZIP_NN" NOT NULL ENABLE,
    "PHONE_NUMBER" VARCHAR2(10) CONSTRAINT "F_CSR_PHONE_NUMB_NN" NOT NULL ENABLE,
     CONSTRAINT "F_CSR_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DATA01
   STORAGE (INITIAL 1M)
;

--Calculated the real size of this table, considering growth in the next 6 months.
CREATE TABLE  "F_PROMOTIONAL_MENUS"
   ("CODE" VARCHAR2(3),
    "NAME" VARCHAR2(30) CONSTRAINT "F_PMU_NAME_NN" NOT NULL ENABLE,
    "START_DATE" DATE CONSTRAINT "F_PMU_START_DATE_NN" NOT NULL ENABLE,
    "END_DATE" DATE,
    "GIVE_AWAY" VARCHAR2(80),
     CONSTRAINT "F_PMU_CODE_PK" PRIMARY KEY ("CODE")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DATA01
   STORAGE (INITIAL 11K)
;

CREATE TABLE  "F_REGULAR_MENUS"
   ("CODE" VARCHAR2(3),
    "TYPE" VARCHAR2(30) CONSTRAINT "F_RMU_TYPE_NN" NOT NULL ENABLE,
    "HOURS_SERVED" VARCHAR2(30) CONSTRAINT "F_RMU_HOURS_SERVED_NN" NOT NULL ENABLE,
     CONSTRAINT "F_RMU_CODE_PK" PRIMARY KEY ("CODE")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DATA01
   STORAGE (INITIAL 1M)
;

CREATE TABLE  "F_FOOD_ITEMS"
   ("FOOD_ITEM_NUMBER" NUMBER(5,0),
    "DESCRIPTION" VARCHAR2(100) CONSTRAINT "F_FIM_DESC_NN" NOT NULL ENABLE,
    "PRICE" NUMBER(8,2) CONSTRAINT "F_FIM_PRICE_NN" NOT NULL ENABLE,
    "REGULAR_CODE" VARCHAR2(3),
    "PROMO_CODE" VARCHAR2(3),
     CONSTRAINT "F_FIM_FOOD_ITEM_NUMBER_PK" PRIMARY KEY ("FOOD_ITEM_NUMBER")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DATA01
   STORAGE (INITIAL 1M)
;
--I added the constraint not null to the column training. If staff doesn't have any raing, the field should be filled with "none"
CREATE TABLE  "F_STAFFS"
   ("ID" NUMBER(5,0),
    "FIRST_NAME" VARCHAR2(25) CONSTRAINT "F_STF_FIRST_NAME_NN" NOT NULL ENABLE,
    "LAST_NAME" VARCHAR2(35) CONSTRAINT "F_STF_LAST_NAME_NN" NOT NULL ENABLE,
    "BIRTHDATE" DATE CONSTRAINT "F_STF_BIRTHDATE_NN" NOT NULL ENABLE,
    "SALARY" NUMBER(8,2) CONSTRAINT "F_STF_SALARY_NN" NOT NULL ENABLE,
    "OVERTIME_RATE" NUMBER(5,2),
    "TRAINING" VARCHAR2(50) NOT NULL,
    "STAFF_TYPE" VARCHAR2(20) CONSTRAINT "F_STF_STAFF_TYPE_NN" NOT NULL ENABLE,
    "MANAGER_ID" NUMBER(5,0),
    "MANAGER_BUDGET" NUMBER(8,2),
    "MANAGER_TARGET" NUMBER(8,2),
     CONSTRAINT "F_STF_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DATA01
   STORAGE (INITIAL 1M)
;
--Adding a default value for this column
ALTER TABLE "F_STAFFS"
   MODIFY("TRAINING" VARCHAR2(50) default 'None');

--This table was selected to be partitioned by range based on the column order_date
--I decided to partition this table to group the order by trimestre and make the search for this orders faster, since the reports generated group the order by week and month (my assumption)
CREATE TABLE  "F_ORDERS"
   ("ORDER_NUMBER" NUMBER(5,0),
    "ORDER_DATE" DATE CONSTRAINT "F_ODR_ORDER_DATE_NN" NOT NULL ENABLE,
    "ORDER_TOTAL" NUMBER(8,2),
    "CUST_ID" NUMBER(5,0) CONSTRAINT "F_ODR_CUST_ID_NN" NOT NULL ENABLE,
    "STAFF_ID" NUMBER(5,0) CONSTRAINT "F_ODR_STAFF_ID_NN" NOT NULL ENABLE,
     CONSTRAINT "F_ODR_ORDER_NUMBER_PK" PRIMARY KEY ("ORDER_NUMBER")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DATA01
   STORAGE (INITIAL 1M)
   PARTITION BY RANGE(order_date)(
	PARTITION orders_1quarter2018 VALUES LESS THAN(TO_DATE('04/01/2018','MM/DD/YYYY')),
	PARTITION orders_2quarter2018 VALUES LESS THAN(TO_DATE('07/01/2018','MM/DD/YYYY')),
	PARTITION orders_3quarter2018 VALUES LESS THAN(TO_DATE('10/01/2018','MM/DD/YYYY'))
   )
;

CREATE TABLE  "F_ORDER_LINES"
   ("ORDER_NUMBER" NUMBER(5,0),
    "FOOD_ITEM_NUMBER" NUMBER(5,0),
    "QUANTITY" NUMBER(3,0) CONSTRAINT "F_OLE_QUANTITY_NN" NOT NULL ENABLE,
     CONSTRAINT "F_OLE_PK" PRIMARY KEY ("ORDER_NUMBER", "FOOD_ITEM_NUMBER")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DATA01
   STORAGE (INITIAL 1M)
;

CREATE TABLE  "F_SHIFTS"
   ("CODE" NUMBER(5,0),
    "DESCRIPTION" VARCHAR2(100) CONSTRAINT "F_SFT_DESC_NN" NOT NULL ENABLE,
     CONSTRAINT "F_SFT_CODE_PK" PRIMARY KEY ("CODE")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DATA01
   STORAGE (INITIAL 1M)
;

CREATE TABLE  "F_SHIFT_ASSIGNMENTS"
   ("CODE" NUMBER(5,0),
    "ID" NUMBER(5,0),
    "SHIFT_ASSIGN_DATE" DATE CONSTRAINT "F_SAT_SHIFT_ASSIGN_DATE_NN" NOT NULL ENABLE,
     CONSTRAINT "F_SAT_PK" PRIMARY KEY ("CODE", "ID")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DATA01
   STORAGE (INITIAL 1M)
;

ALTER TABLE  "F_FOOD_ITEMS" ADD CONSTRAINT "F_FIM_PROMO_CODE_FK" FOREIGN KEY ("PROMO_CODE")
      REFERENCES  "F_PROMOTIONAL_MENUS" ("CODE") ENABLE;

ALTER TABLE  "F_FOOD_ITEMS" ADD CONSTRAINT "F_FIM_REGULAR_CODE_FK" FOREIGN KEY ("REGULAR_CODE")
      REFERENCES  "F_REGULAR_MENUS" ("CODE") ENABLE;

ALTER TABLE  "F_ORDERS" ADD CONSTRAINT "F_ODR_CUST_ID_FK" FOREIGN KEY ("CUST_ID")
      REFERENCES  "F_CUSTOMERS" ("ID") ENABLE;

ALTER TABLE  "F_ORDERS" ADD CONSTRAINT "F_ODR_STAFF_ID_FK" FOREIGN KEY ("STAFF_ID")
      REFERENCES  "F_STAFFS" ("ID") ENABLE;

ALTER TABLE  "F_ORDER_LINES" ADD CONSTRAINT "F_OLE_FOOD_ITEM_NUMBER_FK" FOREIGN KEY ("FOOD_ITEM_NUMBER")
      REFERENCES  "F_FOOD_ITEMS" ("FOOD_ITEM_NUMBER") ENABLE;

ALTER TABLE  "F_ORDER_LINES" ADD CONSTRAINT "F_OLE_ORDER_NUMBER_FK" FOREIGN KEY ("ORDER_NUMBER")
      REFERENCES  "F_ORDERS" ("ORDER_NUMBER") ENABLE;

ALTER TABLE  "F_SHIFT_ASSIGNMENTS" ADD CONSTRAINT "F_SAT_CODE_FK" FOREIGN KEY ("CODE")
      REFERENCES  "F_SHIFTS" ("CODE") ENABLE;

ALTER TABLE  "F_SHIFT_ASSIGNMENTS" ADD CONSTRAINT "F_SAT_ID_FK" FOREIGN KEY ("ID")
      REFERENCES  "F_STAFFS" ("ID") ENABLE;
	  

CREATE TABLE  "D_CDS"
   ("CD_NUMBER" NUMBER(5,0),
    "TITLE" VARCHAR2(50) CONSTRAINT "D_CDS_TITLE_NN" NOT NULL ENABLE,
    "PRODUCER" VARCHAR2(50) CONSTRAINT "D_CDS_PRODUCER_NN" NOT NULL ENABLE,
    "YEAR" VARCHAR2(4) CONSTRAINT "D_CDS_YEAR_NN" NOT NULL ENABLE,
     CONSTRAINT "D_CDS_CD_NUMBER_PK" PRIMARY KEY ("CD_NUMBER")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DIM_DATA01
   STORAGE (INITIAL 1M)
;

--Calculated real size of this table, considering growth in the next 6 months
--I added the constraint NOT NULL to the column email because having e-mail from clients is important to distribute future marketing. 
CREATE TABLE  "D_CLIENTS"
   ("CLIENT_NUMBER" NUMBER(5,0),
    "FIRST_NAME" VARCHAR2(25) CONSTRAINT "D_CLT_FIST_NAME_NN" NOT NULL ENABLE,
    "LAST_NAME" VARCHAR2(30) CONSTRAINT "D_CLT_LAST_NAME_NN" NOT NULL ENABLE,
    "PHONE" NUMBER(15,0) CONSTRAINT "D_CLT_PHONE_NN" NOT NULL ENABLE,
    "EMAIL" VARCHAR2(50) NOT NULL ENABLE,
     CONSTRAINT "D_CLT_CLIENT_NUMBER_PK" PRIMARY KEY ("CLIENT_NUMBER")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DIM_DATA01
   STORAGE (INITIAL 4K)
;

CREATE TABLE  "D_PACKAGES"
   ("CODE" NUMBER(10,0),
    "LOW_RANGE" NUMBER(6,0) CONSTRAINT "D_PKE_LOW_RANGE_NN" NOT NULL ENABLE,
    "HIGH_RANGE" NUMBER(6,0) CONSTRAINT "D_PKE_HIGH_RANGE_NN" NOT NULL ENABLE,
     CONSTRAINT "D_PKE_CODE_PK" PRIMARY KEY ("CODE")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DIM_DATA01
   STORAGE (INITIAL 1M)
;

CREATE TABLE  "D_THEMES"
   ("CODE" NUMBER(10,0),
    "DESCRIPTION" VARCHAR2(100) CONSTRAINT "D_TME_DESC_NN" NOT NULL ENABLE,
     CONSTRAINT "D_TME_CODE_PK" PRIMARY KEY ("CODE")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DIM_DATA01
   STORAGE (INITIAL 1M)
;

CREATE TABLE  "D_VENUES"
   ("ID" NUMBER(5,0),
    "LOC_TYPE" VARCHAR2(30) CONSTRAINT "D_VNE_LOC_TYPE_NN" NOT NULL ENABLE,
    "ADDRESS" VARCHAR2(100) CONSTRAINT "D_VNE_ADDRESS_NN" NOT NULL ENABLE,
    "RENTAL_FEE" VARCHAR2(50) CONSTRAINT "D_VNE_RENTAL_FEE_NN" NOT NULL ENABLE,
    "COMMENTS" VARCHAR2(100),
     CONSTRAINT "D_VNE_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DIM_DATA01
   STORAGE (INITIAL 1M)
;

CREATE TABLE  "D_EVENTS"
   ("ID" NUMBER(5,0),
    "NAME" VARCHAR2(50) CONSTRAINT "D_EVE_NAME_NN" NOT NULL ENABLE,
    "EVENT_DATE" DATE CONSTRAINT "D_EVE_EVENT_DATE_NN" NOT NULL ENABLE,
    "DESCRIPTION" VARCHAR2(50),
    "COST" NUMBER(8,2) CONSTRAINT "D_EVE_COST_NN" NOT NULL ENABLE,
    "VENUE_ID" NUMBER(5,0) CONSTRAINT "D_EVE_VENUE_ID_NN" NOT NULL ENABLE,
    "PACKAGE_CODE" NUMBER(5,0) CONSTRAINT "D_EVE_PACKAGE_CODE_NN" NOT NULL ENABLE,
    "THEME_CODE" NUMBER(10,0) CONSTRAINT "D_EVE_THEME_CODE_NN" NOT NULL ENABLE,
    "CLIENT_NUMBER" NUMBER(5,0) CONSTRAINT "D_EVE_CLIENT_NUMBER_NN" NOT NULL ENABLE,
     CONSTRAINT "D_EVE_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DIM_DATA01
   STORAGE (INITIAL 1M)
;
--I added the constraint not null to the column expertise. If the partner has no expertise, the field should be filled with none.
CREATE TABLE  "D_PARTNERS"
   ("ID" NUMBER(5,0),
    "FIRST_NAME" VARCHAR2(25) CONSTRAINT "D_PTR_FIRST_NAME_NN" NOT NULL ENABLE,
    "LAST_NAME" VARCHAR2(30) CONSTRAINT "D_PTR_LAST_NAME_NN" NOT NULL ENABLE,
    "EXPERTISE" VARCHAR2(25) NOT NULL ENABLE,
    "SPECIALTY" VARCHAR2(25),
    "AUTH_EXPENSE_AMT" NUMBER(8,2),
    "MANAGER_ID" NUMBER(5,0),
    "PARTNER_TYPE" VARCHAR2(25) CONSTRAINT "D_PTR_PARTNER_TYPE_NN" NOT NULL ENABLE,
     CONSTRAINT "D_PTR_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DIM_DATA01
   STORAGE (INITIAL 1M)
;
--Adding default value
ALTER TABLE "D_PARTNERS"
   MODIFY("EXPERTISE" VARCHAR2(25) default 'None');

CREATE TABLE  "D_JOB_ASSIGNMENTS"
   ("PARTNER_ID" NUMBER(5,0),
    "EVENT_ID" NUMBER(5,0),
    "JOB_DATE" DATE CONSTRAINT "D_JAT_JOB_DATE_NN" NOT NULL ENABLE,
    "STATUS" VARCHAR2(50),
     CONSTRAINT "D_JAT_PK" PRIMARY KEY ("PARTNER_ID", "EVENT_ID")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DIM_DATA01
   STORAGE (INITIAL 1M)
;

CREATE TABLE  "D_TYPES"
   ("CODE" NUMBER(10,0),
    "DESCRIPTION" VARCHAR2(50) CONSTRAINT "D_TPE_DESC_NN" NOT NULL ENABLE,
     CONSTRAINT "D_TPE_CODE_PK" PRIMARY KEY ("CODE")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DIM_DATA01
   STORAGE (INITIAL 1M)
;

-- I added the constraint not null to the column duration. Every song has duration.
CREATE TABLE  "D_SONGS"
   ("ID" NUMBER(5,0),
    "TITLE" VARCHAR2(50) CONSTRAINT "D_SNG_TITLE_NN" NOT NULL ENABLE,
    "DURATION" VARCHAR2(20) NOT NULL ENABLE,
    "ARTIST" VARCHAR2(20),
    "TYPE_CODE" NUMBER(5,0) CONSTRAINT "D_SNG_TYPE_CODE_NN" NOT NULL ENABLE,
     CONSTRAINT "D_SNG_ID_PK" PRIMARY KEY ("ID")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DIM_DATA01
   STORAGE (INITIAL 1M)
;

CREATE TABLE  "D_PLAY_LIST_ITEMS"
   ("EVENT_ID" NUMBER(5,0),
    "SONG_ID" NUMBER(5,0),
    "COMMENTS" VARCHAR2(80),
     CONSTRAINT "D_PLM_PK" PRIMARY KEY ("EVENT_ID", "SONG_ID")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DIM_DATA01
   STORAGE (INITIAL 1M)
;

CREATE TABLE  "D_TRACK_LISTINGS"
   ("SONG_ID" NUMBER(5,0),
    "CD_NUMBER" NUMBER(5,0),
    "TRACK" NUMBER(2,0) CONSTRAINT "D_TLG_TRACK_NUMBER_NN" NOT NULL ENABLE,
     CONSTRAINT "D_TLG_PK" PRIMARY KEY ("SONG_ID", "CD_NUMBER")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_DIM_DATA01
   STORAGE (INITIAL 1M)
;

ALTER TABLE  "D_EVENTS" ADD CONSTRAINT "D_EVE_CLIENT_NUMBER_FK" FOREIGN KEY ("CLIENT_NUMBER")
      REFERENCES  "D_CLIENTS" ("CLIENT_NUMBER") ENABLE;
ALTER TABLE  "D_EVENTS" ADD CONSTRAINT "D_EVE_PACKAGE_CODE_FK" FOREIGN KEY ("PACKAGE_CODE")
      REFERENCES  "D_PACKAGES" ("CODE") ENABLE;
ALTER TABLE  "D_EVENTS" ADD CONSTRAINT "D_EVE_THEME_CODE_FK" FOREIGN KEY ("THEME_CODE")
      REFERENCES  "D_THEMES" ("CODE") ENABLE;
ALTER TABLE  "D_EVENTS" ADD CONSTRAINT "D_EVE_VENUE_ID_FK" FOREIGN KEY ("VENUE_ID")
      REFERENCES  "D_VENUES" ("ID") ENABLE;
ALTER TABLE  "D_JOB_ASSIGNMENTS" ADD CONSTRAINT "D_JAT_EVENT_ID_FK" FOREIGN KEY ("EVENT_ID")
      REFERENCES  "D_EVENTS" ("ID") ENABLE;
ALTER TABLE  "D_JOB_ASSIGNMENTS" ADD CONSTRAINT "D_JAT_PARTNER_ID_FK" FOREIGN KEY ("PARTNER_ID")
      REFERENCES  "D_PARTNERS" ("ID") ENABLE;
ALTER TABLE  "D_PLAY_LIST_ITEMS" ADD CONSTRAINT "D_PLM_EVENT_ID_FK" FOREIGN KEY ("EVENT_ID")
      REFERENCES  "D_EVENTS" ("ID") ENABLE;
ALTER TABLE  "D_PLAY_LIST_ITEMS" ADD CONSTRAINT "D_PLM_SONG_ID_FK" FOREIGN KEY ("SONG_ID")
      REFERENCES  "D_SONGS" ("ID") ENABLE;
ALTER TABLE  "D_SONGS" ADD CONSTRAINT "D_SNG_TYPE_CODE_FK" FOREIGN KEY ("TYPE_CODE")
      REFERENCES  "D_TYPES" ("CODE") ENABLE;
ALTER TABLE  "D_TRACK_LISTINGS" ADD CONSTRAINT "D_TLG_CD_NUMBER_FK" FOREIGN KEY ("CD_NUMBER")
      REFERENCES  "D_CDS" ("CD_NUMBER") ENABLE;
ALTER TABLE  "D_TRACK_LISTINGS" ADD CONSTRAINT "D_TLG_SONG_ID_FK" FOREIGN KEY ("SONG_ID")
      REFERENCES  "D_SONGS" ("ID") ENABLE;
CREATE TABLE  "REGIONS"
   ("REGION_ID" NUMBER CONSTRAINT "REGION_ID_NN" NOT NULL ENABLE,
    "REGION_NAME" VARCHAR2(25),
    CONSTRAINT "REG_ID_PK" PRIMARY KEY ("REGION_ID")
    USING INDEX  ENABLE
   ) TABLESPACE EDW_OTHER_DATA01
   STORAGE (INITIAL 1M)
;
   
CREATE TABLE  "COUNTRIES"
   ("COUNTRY_ID" CHAR(2) CONSTRAINT "COUNTRY_ID_NN" NOT NULL ENABLE,
    "COUNTRY_NAME" VARCHAR2(40),
    "REGION_ID" NUMBER,
     CONSTRAINT "COUNTRY_C_ID_PK" PRIMARY KEY ("COUNTRY_ID") ENABLE
   ) TABLESPACE EDW_OTHER_DATA01
   STORAGE (INITIAL 1M);

ALTER TABLE  "COUNTRIES" ADD CONSTRAINT "COUNTR_REG_FK" FOREIGN KEY ("REGION_ID")
	REFERENCES  "REGIONS" ("REGION_ID") ENABLE;
   
CREATE TABLE  "LOCATIONS"
   ("LOCATION_ID" NUMBER(4,0),
    "STREET_ADDRESS" VARCHAR2(40),
    "POSTAL_CODE" VARCHAR2(12),
    "CITY" VARCHAR2(30) CONSTRAINT "LOC_CITY_NN" NOT NULL ENABLE,
    "STATE_PROVINCE" VARCHAR2(25),
    "COUNTRY_ID" CHAR(2),
    CONSTRAINT "LOC_ID_PK" PRIMARY KEY ("LOCATION_ID")
    USING INDEX  ENABLE,
    CONSTRAINT "LOC_ID_INTERVAL" CHECK (location_id BETWEEN 1 AND 9900)
   ) TABLESPACE EDW_OTHER_DATA01
   STORAGE (INITIAL 1M)
;
   
ALTER TABLE  "LOCATIONS" ADD CONSTRAINT "LOC_C_ID_FK" FOREIGN KEY ("COUNTRY_ID")
	REFERENCES  "COUNTRIES" ("COUNTRY_ID") ENABLE;

CREATE TABLE  "DEPARTMENTS"
   ("DEPARTMENT_ID" NUMBER(4,0),
    "DEPARTMENT_NAME" VARCHAR2(30) CONSTRAINT "DEPT_NAME_NN" NOT NULL ENABLE,
    "MANAGER_ID" NUMBER(6,0),
    "LOCATION_ID" NUMBER(4,0),
     CONSTRAINT "DEPT_ID_PK" PRIMARY KEY ("DEPARTMENT_ID")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_OTHER_DATA01
   STORAGE (INITIAL 1M)
;
 
ALTER TABLE  "DEPARTMENTS" ADD CONSTRAINT "DEPT_LOC_FK" FOREIGN KEY ("LOCATION_ID")
	REFERENCES  "LOCATIONS" ("LOCATION_ID") ENABLE;
	
CREATE TABLE  "JOBS"
   ("JOB_ID" VARCHAR2(10),
    "JOB_TITLE" VARCHAR2(35) CONSTRAINT "JOB_TITLE_NN" NOT NULL ENABLE,
    "MIN_SALARY" NUMBER(6,0),
    "MAX_SALARY" NUMBER(6,0),
     CONSTRAINT "JOB_ID_PK" PRIMARY KEY ("JOB_ID")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_OTHER_DATA01
   STORAGE (INITIAL 1M)
;
	
CREATE TABLE  "EMPLOYEES"
   ("EMPLOYEE_ID" NUMBER(6,0),
    "FIRST_NAME" VARCHAR2(20),
    "LAST_NAME" VARCHAR2(25) CONSTRAINT "EMP_LAST_NAME_NN" NOT NULL ENABLE,
    "EMAIL" VARCHAR2(25) CONSTRAINT "EMP_EMAIL_NN" NOT NULL ENABLE,
    "PHONE_NUMBER" VARCHAR2(20),
    "HIRE_DATE" DATE CONSTRAINT "EMP_HIRE_DATE_NN" NOT NULL ENABLE,
    "JOB_ID" VARCHAR2(10) CONSTRAINT "EMP_JOB_NN" NOT NULL ENABLE,
    "SALARY" NUMBER(8,2),
    "COMMISSION_PCT" NUMBER(2,2),
    "MANAGER_ID" NUMBER(6,0),
    "DEPARTMENT_ID" NUMBER(4,0),
	"BONUS" VARCHAR2(5),
     CONSTRAINT "EMP_SALARY_MIN" CHECK (salary > 0) ENABLE, 
     CONSTRAINT "EMP_ID_PK" PRIMARY KEY ("EMPLOYEE_ID")
	USING INDEX  ENABLE,
     CONSTRAINT "EMP_FNAME_UPPER" CHECK (first_name = UPPER(first_name)) ENABLE, 
     CONSTRAINT "EMP_LNAME_UPPER" CHECK (last_name = UPPER(last_name)) ENABLE,
     CONSTRAINT "EMP_EMAIL_UK" UNIQUE ("EMAIL")
  USING INDEX  ENABLE
  ) TABLESPACE EDW_OTHER_DATA01
   STORAGE (INITIAL 1M);
  
ALTER TABLE  "EMPLOYEES" ADD CONSTRAINT "EMP_DEPT_FK" FOREIGN KEY ("DEPARTMENT_ID")
	REFERENCES  "DEPARTMENTS" ("DEPARTMENT_ID") ENABLE;
ALTER TABLE  "EMPLOYEES" ADD CONSTRAINT "EMP_JOB_FK" FOREIGN KEY ("JOB_ID")
	REFERENCES  "JOBS" ("JOB_ID") ENABLE;
ALTER TABLE  "EMPLOYEES" ADD CONSTRAINT "EMP_MANAGER_FK" FOREIGN KEY ("MANAGER_ID")
	REFERENCES  "EMPLOYEES" ("EMPLOYEE_ID") ENABLE;
ALTER TABLE  "DEPARTMENTS" ADD CONSTRAINT "DEPT_MGR_FK" FOREIGN KEY ("MANAGER_ID")
	REFERENCES  "EMPLOYEES" ("EMPLOYEE_ID") DISABLE;
ALTER TABLE  "DEPARTMENTS"
	DISABLE CONSTRAINT "DEPT_MGR_FK";

CREATE TABLE  "JOB_GRADES"
   ("GRADE_LEVEL" VARCHAR2(3),
    "LOWEST_SAL" NUMBER,
    "HIGHEST_SAL" NUMBER
   ) TABLESPACE EDW_OTHER_DATA01
   STORAGE (INITIAL 1M)
;

CREATE TABLE  "JOB_HISTORY"
   ("EMPLOYEE_ID" NUMBER(6,0) CONSTRAINT "JHIST_EMPLOYEE_NN" NOT NULL ENABLE,
    "START_DATE" DATE CONSTRAINT "JHIST_START_DATE_NN" NOT NULL ENABLE,
    "END_DATE" DATE CONSTRAINT "JHIST_END_DATE_NN" NOT NULL ENABLE,
    "JOB_ID" VARCHAR2(10) CONSTRAINT "JHIST_JOB_NN" NOT NULL ENABLE,
    "DEPARTMENT_ID" NUMBER(4,0),
     CONSTRAINT "JHIST_DATE_INTERVAL" CHECK (end_date > start_date) ENABLE,
     CONSTRAINT "JHIST_EMP_ID_ST_DATE_PK" PRIMARY KEY ("EMPLOYEE_ID", "START_DATE")
  USING INDEX  ENABLE
   ) TABLESPACE EDW_OTHER_DATA01
   STORAGE (INITIAL 1M)
;

ALTER TABLE  "JOB_HISTORY" ADD CONSTRAINT "JHIST_DEPT_FK" FOREIGN KEY ("DEPARTMENT_ID")
	REFERENCES  "DEPARTMENTS" ("DEPARTMENT_ID") ENABLE;
-- the folowing FK constraint is disabled as table contains historical data for employees that are not in the current employees table
ALTER TABLE  "JOB_HISTORY" ADD CONSTRAINT "JHIST_EMP_FK" FOREIGN KEY ("EMPLOYEE_ID")
	  REFERENCES  "EMPLOYEES" ("EMPLOYEE_ID") DISABLE;
ALTER TABLE  "JOB_HISTORY" ADD CONSTRAINT "JHIST_JOB_FK" FOREIGN KEY ("JOB_ID")
	  REFERENCES  "JOBS" ("JOB_ID") ENABLE;
	  
	  ALTER TABLE  "DEPARTMENTS" ENABLE CONSTRAINT "DEPT_MGR_FK";


	
--Create sequence for departments PK				
CREATE SEQUENCE "DEPARTMENTS_SEQ"  
	MINVALUE 1 
	MAXVALUE 9990 
	INCREMENT BY 10 
	START WITH 280 
	NOCACHE  NOORDER  NOCYCLE;

--Create sequence for employees PK	
CREATE SEQUENCE "EMPLOYEES_SEQ"  
	MINVALUE 1 
	MAXVALUE 9999999999999999999999999999 
	INCREMENT BY 1 
	START WITH 207 
	NOCACHE  NOORDER  NOCYCLE;

--Create sequence for locations PK	
CREATE SEQUENCE "LOCATIONS_SEQ"  
	MINVALUE 1 
	MAXVALUE 9900 
	INCREMENT BY 100 
	START WITH 3300 
	NOCACHE  NOORDER  NOCYCLE;

--Validate that the tables were created in the correct tablespace
SELECT table_name, tablespace_name
FROM user_tables
ORDER BY tablespace_name;

--Validate that partitions were created
SELECT table_name, partitioning_type, status 
FROM user_part_tables;

SPOOL OFF;
